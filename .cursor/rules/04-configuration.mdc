---
description: 
globs: 
alwaysApply: false
---
# Dependency Scanner Configuration and Extensions

## Configuration File

The [config.yaml](mdc:config.yaml) file contains the main configuration options:

```yaml
allowed_dependencies:
  - List of explicitly allowed dependencies
  
restricted_dependencies:
  - List of explicitly restricted dependencies
  
ignore_patterns:
  - Patterns for files/directories to ignore during scanning
  
categories:
  Category1:
    - List of dependencies in this category
  Category2:
    - List of dependencies in this category
```

## Extension Points

The scanner is designed to be extensible through several mechanisms:

### 1. Adding New Parsers

To add support for a new dependency file format:

1. Create a new parser class in the `parsers/` directory
2. Implement the `DependencyParser` interface
3. Register the parser in the `ParserRegistry`

### 2. Adding New Analyzers

To add support for a new programming language:

1. Create a new analyzer class in the `analyzers/` directory
2. Implement the `ImportAnalyzer` interface
3. Register the analyzer in the `AnalyzerRegistry`

### 3. Adding New Normalizers

To add support for new package naming conventions:

1. Create a new normalizer class in the `normalizers/` directory
2. Implement the required normalization methods
3. Update the `DependencyClassifier` to use the new normalizer

### 4. Adding New Reporters

To add support for new output formats:

1. Create a new reporter class in the `reporters/` directory
2. Implement the necessary reporting methods
3. Update the CLI to expose the new reporter

## Dependency Categories

Dependencies can be categorized into custom groups defined in the configuration file. The current categories include:

- **Web Frameworks**: Web development libraries and frameworks
- **Data Science**: Data processing and analysis libraries
- **Machine Learning**: ML and AI related libraries

These categories can be customized by editing the [config.yaml](mdc:config.yaml) file.
